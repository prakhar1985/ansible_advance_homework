- hosts: localhost
  gather_facts: false
  vars:
    OSP_GUID: "{{ lookup('env','OSP_GUID') }}"
    OSP_DOMAIN: "{{ lookup('env','OSP_DOMAIN') }}"
  tasks:
  - name: Create In-memory Inventory
    add_host: 
      name: workstation-{{ OSP_GUID }}.{{ OSP_DOMAIN }}
      group: workstation
      ansible_user: "cloud-user"
      ansible_ssh_private_key_file: ~/.ssh/openstack.pem

- hosts: workstation
  gather_facts: false
  tasks:
  - name: OpenStack servers
    os_server_info:
      cloud: openstack
      server: '*'
    register: openstack_info
  
  - name: Export Instance Pass
    copy:
      content: "Four QA Instance exist \t.......... Pass\n"
      dest: ~/grade_result.txt
    when:  openstack_info.openstack_servers | length == 4
    delegate_to: localhost

  - name: Export Instance Fail
    copy:
      content: "Four QA instance exist \t.......... Fail\n"
      dest: ~/grade_result.txt
    when:  openstack_info.openstack_servers | length != 4
    delegate_to: localhost


- hosts: workstation
  gather_facts: false
  tasks:
  - name: OpenStack servers
    os_server_info:
      cloud: openstack
      server: 'frontend'
    register: frontend_info
   
  - name: Export frontend Pass
    lineinfile:
      line: "QA frontend exist \t.......... Pass"
      path: ~/grade_result.txt
      state: present
      insertafter: EOF
    when:  frontend_info.openstack_servers | length == 1
    delegate_to: localhost

  - name: Export frontend fail
    lineinfile:
      line: "QA frontend exist \t.......... Fail"
      path: ~/grade_result.txt
      state: present
      insertafter: EOF
    when:  frontend_info.openstack_servers | length != 1
    delegate_to: localhost

  - name: Access frontend website
    uri:
      url: "http://{{ frontend_info.openstack_servers.0.public_v4 }}"
      status_code: 200
      return_content: yes
    register: osp_frontend_page
    ignore_errors: yes

  - name: Export frontend webpage Pass
    lineinfile:
      line: "QA frontend webpage exist \t.......... Pass"
      path: ~/grade_result.txt
      state: present
      insertafter: EOF
    when: '"Ansible has done its job" in osp_frontend_page.content'
    delegate_to: localhost

  - name: Export frontend webpage fail
    lineinfile:
      line: "QA frontend webpage exist \t.......... Fail"
      path: ~/grade_result.txt
      state: present
      insertafter: EOF
    when: '"Ansible has done its job" not in osp_frontend_page.content'
    delegate_to: localhost


- hosts: localhost
  gather_facts: false
  vars:
    THREE_TIER_GUID: "{{ lookup('env','THREE_TIER_GUID') }}"
  tasks:
  - name: Access website
    uri:
      url: "http://frontend1.{{ THREE_TIER_GUID }}.example.opentlc.com"
      status_code: 200
      return_content: yes
    register: prod_frontend_page

  - name: Export frontend webpage Pass
    lineinfile:
      line: "Prod frontend webpage exist \t.......... Pass"
      path: ~/grade_result.txt
      state: present
      insertafter: EOF
    when: '"Ansible has done its job" in prod_frontend_page.content'
    delegate_to: localhost

  - name: Export frontend webpage fail
    lineinfile:
      line: "Prod frontend webpage exist \t.......... Fail"
      path: ~/grade_result.txt
      state: present
      insertafter: EOF
    when: '"Ansible has done its job" not in prod_frontend_page.content'
    delegate_to: localhost


  - name: Success
    debug: msg="Congrats Yours HW Assignment is completed"


